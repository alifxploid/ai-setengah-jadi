# GolangCI-Lint Configuration
# Code Quality & Performance Rules

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - tmp
    - build
    - node_modules
  skip-files:
    - ".*_test.go"
    - ".*\.pb\.go"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true

linters-settings:
  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: true

  # Duplicate code detection
  dupl:
    threshold: 100

  # Error handling
  errcheck:
    check-type-assertions: true
    check-blank: true

  # Function length
  funlen:
    lines: 100
    statements: 50

  # Cognitive complexity
  gocognit:
    min-complexity: 20

  # Constants detection
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true

  # Code complexity
  gocyclo:
    min-complexity: 15

  # Imports formatting
  goimports:
    local-prefixes: gryt-backend

  # Line length
  lll:
    line-length: 120
    tab-width: 4

  # Naming conventions
  revive:
    rules:
      - name: exported
        arguments: ["checkPrivateReceivers"]
      - name: var-naming
      - name: package-comments
      - name: range
      - name: time-naming
      - name: context-as-argument
      - name: context-keys-type
      - name: indent-error-flow

  # Unused code
  unused:
    check-exported: false

  # Whitespace
  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-case-trailing-whitespace: true
    allow-cuddle-declarations: false

linters:
  disable-all: true
  enable:
    # Bugs
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exportloopref
    - forbidigo
    - funlen
    - gocheckcompilerdirectives
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - lll
    - loggercheck
    - makezero
    - mirror
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tenv
    - testableexamples
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wsl

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - gocyclo
        - errcheck
        - dupl
        - gosec
    
    # Exclude known linters from partially hard-to-fix issues
    - linters:
        - lll
      source: "^//go:generate "
    
    # Exclude shadow checking on err variables
    - linters:
        - govet
      text: 'shadow: declaration of "err"'
    
    # Exclude certain gosec rules
    - linters:
        - gosec
      text: "G404:" # Use of weak random number generator
    
    # Exclude magic number detection for common values
    - linters:
        - gomnd
      text: "Magic number: (0|1|2|10|100|1000|404|500)"

  max-issues-per-linter: 50
  max-same-issues: 3
  new: false
  fix: false

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: warning