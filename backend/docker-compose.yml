version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: gryt-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: gryt_chat
      MYSQL_USER: gryt_user
      MYSQL_PASSWORD: gryt_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - gryt-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: gryt-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gryt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gryt-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=gryt_user
      - DB_PASSWORD=gryt_password
      - DB_NAME=gryt_chat
      - JWT_SECRET=your_super_secret_jwt_key_here_minimum_32_characters
      - ACCESS_KEY=ADMIN_ACCESS_KEY_2024
      - CHAT_TOKENS_PER_USER=10
      - SEARCH_TOKENS_PER_USER=100
      - RATE_LIMIT_PER_MINUTE=30
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gryt-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: gryt-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - gryt-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  gryt-network:
    driver: bridge